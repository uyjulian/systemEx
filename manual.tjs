/**
 * 擬似コードによるマニュアル
 */
class System
{
	/**
	 * レジストリにデータを書き込みます
	 * @param key 書き込み先のキー(readRegValue と同様に HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\hoeg\installdir と指定する)
	 * @param value 書き込む値(文字列又は整数値)
	 */
	function writeRegValue(key, value);

	// レジストリの読み込みは、組み込みの System.readRegValue を使用のこと

	/**
	 * 環境変数を取得
	 * @param name 環境変数名
	 * @return 環境変数値（未定義の場合はvoid）
	 */
	function readEnvValue(name);

	/**
	 * 環境変数を設定
	 * @param name 環境変数名
	 * @param value 設定する値
	 * @return 元の環境変数値（未定義の場合はvoid）
	 */
	function writeEnvValue(name, value);
	
	/**
	 * 文字列内の「%〜%」を環境変数で展開
	 * @param text 展開する文字列
	 * @return 展開後文字列
	 */
	function expandEnvString(text);
	
	/**
	 * URLEncode処理を行う
	 * @param str 元文字列
	 * @param utf8 UTF8で出力する場合はtrue
	 * @return URLEncodeされた文字列
	 */
	function urlencode(str, utf8=true);

	/**
	 * URLDecode処理を行う
	 * @param str 元文字列
	 * @param utf8 UTF8として処理する場合はtrue
	 * @return URLDecodeされた文字列
	 */
	function urldecode(str, utf8=true);

	/**
	 * Ctrl+F12で表示される環境情報テキストを取得する
	 * @return テキスト(TVPGetAboutString)
	 */
	function getAboutString();

	/**
	 * 確認用メッセージ窓を表示します。ウインドウはモーダルで表示されます。
	 * @param text 表示するメッセージ
	 * @param caption ウインドウのキャプション文字列
	 * @param window 指定があった場合はそのウインドウを親として表示します
	 * @return YESがおされたら true
	 */
	function confirm(text, caption="", window=void);

	/**
	 * 他プロセスのSystem.createAppLockで作成されたMutexがリリースされるのを待ち所有権を取得する
	 * @param key AppLockのキー文字列
	 * @param timeout タイムアウト待ち時間(ms)
	 * @return true:正常終了(AppLockは存在しないもしくはタイムアウト時間内に消えた),  false:タイムアウトした, (void:エラー)
	 *
	 * ※この関数の後に再度同じキーでcreateAppLockを呼ぶ必要はありません（すでに所有権があるため失敗する）
	 */
	function waitForAppLock(key, timeout=0);

	/**
	 * DPI Awarenessを設定する 
	 * @param context : コンテキスト値（-1〜-5）
	 *  DPI_AWARENESS_CONTEXT_UNAWARE              : -1
	 *  DPI_AWARENESS_CONTEXT_SYSTEM_AWARE         : -2
	 *  DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE    : -3
	 *  DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2 : -4 (Creators Update or later)
	 *  DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED    : -5 (October 2018 update or later)
	 * @return 前の値(※設定できなかった場合は0)
	 * @description Windows10 Redstone1 (ver 1607) 以降にて有効
	 */
	function setDpiAwareness(context);
	// context定数
	var dacUnaware           = -1;
	var dacSystemAware       = -2;
	var dacPerMonitorAware   = -3;
	var dacPerMonitorAwareV2 = -4; // (Creators Update or later)
	var dacUnawareGdiScaled  = -5; // (October 2018 update or later)

	/**
	 * OSのバージョン情報詳細を取得
	 * @return void or %[ major, minor, build, platform, spmajor, spminor, servevicepack, suite, type ];
	 * @description RtlGetVersion API および RTL_OSVERSIONINFOW 構造体を参照のこと
	 */
	function getOSVersion();

	/**
	 * SHGetKnownFolderPath ラッパー
	 * @param folderid 取得したいFOLDERID (String or GUID-octet)
	 * @param flags    KF_FLAG_* 値（KF_FLAG_CREATE = 0x00008000 等）
	 * @return 結果のローカルパス文字 or ""(不明) or void(失敗)
	 * @description FOLDERIDが文字列の場合は FOLDERID_{} の {} 部分の文字列を指定。GUIDは <% 00000000 0000 0000 0000 0000000000000 %> の 16byte octet を指定
	 * この関数独自の特殊指定として folderid に "Captures" が指定可能（GameBarのキャプチャフォルダ[Video\Captures] : GUID {EDC0FE71-98D8-4F4A-B920-C8DC133CB165} 指定と同等の動作）
	 */
	function getKnownFolderPath(folderid, flags = 0);

	/**
	 * TVPProcessApplicationMessages(), TVPHandleApplicationMessage() 呼び出し
	 * メッセージの処理（※System.breathe()と違い吉里吉里のイベントも処理される）
	 * 基本的にprocessApplicationMessagesはアプリが終了するまで返らないので注意
	 * [TODO] イベントでの例外発生時はどうなるか確認
	 */
	function processApplicationMessages();
	function handleApplicationMessage();


	/**
	 * ::SetDefaultDllDirectoriesラッパー
	 * @param flags lls*フラグ組み合わせ
	 * @return 成功したらtrue
	 */
	function setDefaultDllDirectories(flags);
	var llsApplicationDir = LOAD_LIBRARY_SEARCH_APPLICATION_DIR; // 0x00000200
	var llsDefaultDirs    = LOAD_LIBRARY_SEARCH_DEFAULT_DIRS;    // 0x00001000
	var llsSystem32       = LOAD_LIBRARY_SEARCH_SYSTEM32;        // 0x00000800
	var llsUserDirs       = LOAD_LIBRARY_SEARCH_USER_DIRS;       // 0x00000400

	/**
	 * ::AddDllDirectoryラッパー
	 * @param path 追加するローカルパス（※Storages.getLocalNameしておくこと）
	 * @return removeDllDirectoryに渡す用の固有値（0だった場合は失敗）
	 * setDefaultDllDirectoriesでllsUserDirsフラグを立てておくこと
	 */
	function addDllDirectory(path);

	/**
	 * ::RemoveDllDirectoryラッパー
	 * @param cookie 削除するaddDllPath固有値
	 * @return 成功したらtrue
	 */
	function removeDllDirectory(cookie);

};
